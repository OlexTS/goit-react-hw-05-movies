{"version":3,"file":"static/js/905.33920b3f.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.jsx","components/GoBackButton/GoBackButton.jsx","pages/MovieDetails.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\n\nexport const Loader = () => {\n    return <div>\n        <Dna\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"dna-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"dna-wrapper\"\n/></div> \n}","import PropTypes from 'prop-types';\nimport { BASE_IMG_URL } from 'services/constants';\n\nexport const MovieInfo = ({ url, tag, title, genres, view, budget }) => {\n  return (\n    <div>\n      <img src={BASE_IMG_URL + url} alt={tag} width=\"400\" />\n      <div>\n        <h2>{title}</h2>\n        <h3>Overview</h3>\n        <p>{view}</p>\n        <p>Budget: {budget}</p>\n        <ul>\n          Genres:{' '}\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n    url: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired\n    }).isRequired).isRequired,\n    view: PropTypes.string.isRequired,\n    budget: PropTypes.number.isRequired\n}","\nexport const GoBackButton = ({onClick}) => {\n    return <div>\n        <button type=\"button\" onClick={onClick}>GO BACK</button>\n    </div>\n}","import { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { GoBackButton } from 'components/GoBackButton/GoBackButton';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backBtn = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        console.log(data);\n        setMovieData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(backBtn);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>Movie Details</h1>\n      <GoBackButton onClick={handleGoBack} />\n      <MovieInfo\n        url={movieData.poster_path}\n        tag={movieData.tagline}\n        title={movieData.title}\n        genres={movieData.genres}\n        view={movieData.overview}\n        budget={movieData.budget}\n      />\n      <nav>\n        <NavLink to=\"cast\" state={{ from: location.state.from }}>\n          CAST\n        </NavLink>\n        <NavLink to=\"reviews\" state={{ from: location.state.from }}>\n          REVIEWS\n        </NavLink>\n      </nav>\n      <Suspense>\n        <div>\n          <Outlet />\n        </div>\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb60805928e986df13f7a98c4acc6577';\n\nexport const fetchTrendingMovies = async (page, options) => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n\n    return response.data.results;\n}\n\nexport const fetchSearchQuery = async (query, options) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`, options);\n\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (id, options) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`, options);\n\n    return response.data;\n}\n\nexport const fetchMovieCredits = async (id, options) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`, options);\n\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (id, options) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`, options);\n\n    return response.data.results;\n}","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","MovieInfo","url","tag","title","genres","view","budget","src","BASE_IMG_URL","alt","map","genre","name","id","GoBackButton","onClick","type","useState","movieData","setMovieData","movieId","useParams","location","useLocation","navigate","useNavigate","backBtn","state","from","useEffect","fetchMovieDetails","data","console","log","poster_path","tagline","overview","to","Suspense","axios","API_KEY","fetchTrendingMovies","page","options","response","results","fetchSearchQuery","query","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}