{"version":3,"file":"static/js/415.af1d8b50.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,0BACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBAIpB,C,sHCbYC,EAAUC,EAAAA,EAAAA,IAAH,+CAUPC,GANQD,EAAAA,EAAAA,GAAH,2FAMOA,EAAAA,EAAAA,GAAH,+GAOTE,EAAOF,EAAAA,EAAAA,GAAH,+OAYJG,EAAaH,EAAAA,EAAAA,EAAH,sG,SC1BVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,WACE,SAACE,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACT,EAAD,WACE,UAAC,KAAD,CAASU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA7C,WACE,gBACES,IAAKJ,EAAcK,EAAAA,GAAeL,EAAcM,EAAAA,GAChDC,IAAI,WAEN,SAACf,EAAD,UAAaO,QANND,EADD,OAcnB,C,gJClBKU,EAAQnB,EAAAA,EAAAA,GAAH,qFAKLoB,EAAUpB,EAAAA,EAAAA,GAAH,+CAoCb,UAhCa,WACX,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGD,GAAa,GAFhB,UAGsBE,EAAAA,EAAAA,MAHtB,OAGSC,EAHT,OAIGL,EAAUK,GAJb,gDAMGC,QAAQC,IAAR,MANH,yBAQGL,GAAa,GARhB,2EAAD,EAWD,GAAE,KAGD,4BACE,SAACL,EAAD,oCACCI,GACC,SAACH,EAAD,WACE,SAAC,IAAD,OAGF,SAAC,IAAD,CAAYf,OAAQA,MAI3B,C,mMC3CDyB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHL,EAAmB,mCAAG,WAAMM,GAAN,uFACVF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD9B,cAC3BE,EAD2B,yBAG1BA,EAASN,KAAKO,SAHY,2CAAH,sDAMnBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADO,cACxBH,EADwB,yBAKvBA,EAASN,KAAKO,SALS,2CAAH,sDAQhBG,EAAiB,mCAAG,WAAM5B,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,oBACEsB,EADF,oBADQ,cACzBE,EADyB,yBAKxBA,EAASN,MALe,2CAAH,sDAQjBW,EAAiB,mCAAG,WAAM7B,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACUsB,EADV,oBADQ,cACzBE,EADyB,yBAKxBA,EAASN,KAAKY,MALU,2CAAH,sDAQjBC,EAAiB,mCAAG,WAAO/B,EAAIgC,GAAX,uFACRX,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACUsB,EADV,2BADQ,cACzBE,EADyB,yBAKxBA,EAASN,KAAKO,SALU,2CAAH,uD,gFCnCvB,IAAMlB,EAAe,kCACfC,EACX,8I","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.js","services/constants.js"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Dna\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-around;\n`;\n\nexport const Item = styled.li`\n  max-width: 350px;\n  border: 3px solid;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 26px;\n  color: black;\n  text-align: center;\n  padding: 10px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BASE_IMG_URL, DEFAULT_IMG_URL } from 'services/constants';\nimport { ListMovie, Item, Section, MovieTitle } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Section>\n      <ListMovie>\n        {movies.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={poster_path ? BASE_IMG_URL + poster_path : DEFAULT_IMG_URL}\n                alt=\"movie\"\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </NavLink>\n          </Item>\n        ))}\n      </ListMovie>\n    </Section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { fetchTrendingMovies } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  padding: 20px;\n`;\nconst Spinner = styled.h1`\n  text-align: center;\n`;\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n        setMovies(data);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending movies today</Title>\n      {isLoading ? (\n        <Spinner>\n          <Loader />\n        </Spinner>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb60805928e986df13f7a98c4acc6577';\n\nexport const fetchTrendingMovies = async page => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\n\nexport const fetchSearchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id, options) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const DEFAULT_IMG_URL =\n  'http://hi-news.pp.ua/uploads/posts/2016-11/scho-oznachaye-smayl-mavpochka-z-zakritimi-ochima-v-yakih-situacyah-yogo-vikoristovuvati_192.jpeg';\nexport const BACKGROUND_IMG =\n  'https://cdn.create.vista.com/api/media/medium/204518900/stock-photo-flat-lay-clapper-board-filmstrips?token=';\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Section","styled","ListMovie","Item","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","BASE_IMG_URL","DEFAULT_IMG_URL","alt","Title","Spinner","useState","setMovies","isLoading","setIsLoading","useEffect","fetchTrendingMovies","data","console","log","axios","API_KEY","page","response","results","fetchSearchQuery","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews","options"],"sourceRoot":""}