{"version":3,"file":"static/js/387.d35237a4.chunk.js","mappings":"0RAEaA,EAAQC,EAAAA,EAAAA,GAAH,uEAILC,EAAOD,EAAAA,EAAAA,GAAH,0LASJE,EAAOF,EAAAA,EAAAA,GAAH,uEAIJG,EAAOH,EAAAA,EAAAA,KAAH,6CAIJI,EAAQJ,EAAAA,EAAAA,EAAH,uG,SCwBlB,EA1CgB,WACd,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,IAAkBH,EAAS,CAAC,GAFlD,OAESI,EAFT,OAGGL,EAAgBK,GAHnB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACN,IAEwB,IAAxBF,EAAaS,QAEb,0BACE,SAACX,EAAD,iDAMJ,iCACE,SAACL,EAAD,uBACA,SAACE,EAAD,UACGK,EAAaU,KAAI,SAAAC,GAAM,OACtB,SAACf,EAAD,WACE,qCACWe,EAAOC,QAChB,0CACe,SAACf,EAAD,UAAOc,EAAOE,iBAJtBF,EAAOG,GADI,QAa/B,C,mMC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAOC,GAAP,uFACVH,EAAAA,EAAAA,IAAA,qCAAwCC,EAAxC,iBAAwDE,IAD9C,cAC3BC,EAD2B,yBAG1BA,EAASb,MAHiB,2CAAH,sDAMnBc,EAAgB,mCAAG,WAAOC,EAAOH,GAAd,uFACPH,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,iBACiDH,EADjD,yBADO,cACxBC,EADwB,yBAKvBA,EAASb,MALc,2CAAH,wDAQhBgB,EAAiB,mCAAG,WAAMR,GAAN,uFACRC,EAAAA,EAAAA,IAAA,gBACZD,EADY,oBACEE,EADF,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,MALe,2CAAH,sDAQjBiB,EAAiB,mCAAG,WAAMT,GAAN,uFACRC,EAAAA,EAAAA,IAAA,gBACZD,EADY,4BACUE,EADV,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,KAAKkB,MALU,2CAAH,sDAQjBnB,EAAiB,mCAAG,WAAOS,GAAP,uFACRC,EAAAA,EAAAA,IAAA,gBACZD,EADY,4BACUE,EADV,2BADQ,cACzBG,EADyB,yBAKxBA,EAASb,KAAKmB,SALU,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport const List = styled.ul`\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0 auto;\n  margin-bottom: 20px;\n`;\nexport const Item = styled.li`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport const Text = styled.span`\n  font-weight: 400;\n`;\n\nexport const Error = styled.p`\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n  color: red;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport { Title, List, Item, Error, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchMovieReviews(movieId, {});\n        setReviewsMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  if (reviewsMovie.length === 0) {\n    return (\n      <div>\n        <Error>This movie doesn't have reviews</Error>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Title>REVIEWS</Title>\n      <List>\n        {reviewsMovie.map(review => (\n          <Item key={review.id}>\n            <h2>\n              Author: {review.author}\n              <p>\n                Description: <Text>{review.content}</Text>\n              </p>\n            </h2>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb60805928e986df13f7a98c4acc6577';\n\nexport const fetchTrendingMovies = async (page) => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\n  return response.data;\n};\n\nexport const fetchSearchQuery = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["Title","styled","List","Item","Text","Error","useState","reviewsMovie","setReviewsMovie","movieId","useParams","useEffect","fetchMovieReviews","data","console","log","length","map","review","author","content","id","axios","API_KEY","fetchTrendingMovies","page","response","fetchSearchQuery","query","fetchMovieDetails","fetchMovieCredits","cast","results"],"sourceRoot":""}