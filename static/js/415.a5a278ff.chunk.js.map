{"version":3,"file":"static/js/415.a5a278ff.chunk.js","mappings":"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","sources":["components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ScrollButton/ScrollButton.jsx","pages/Home.jsx","services/api.js","services/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 150px;\n  margin: auto;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import { ButtonLoad } from './LoadMore.styled';\n\nexport const LoadMore = ({ onLoadMore }) => {\n  return (\n    <div>\n      <ButtonLoad type=\"button\" onClick={onLoadMore}>\n        Load More\n      </ButtonLoad>\n    </div>\n  );\n};\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Dna\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-around;\n`;\n\nexport const Item = styled.li`\n  max-width: 350px;\n  border: 3px solid;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 26px;\n  color: black;\n  text-align: center;\n  padding: 10px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BASE_IMG_URL, DEFAULT_IMG_URL } from 'services/constants';\nimport { ListMovie, Item, Section, MovieTitle } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Section>\n      <ListMovie>\n        {movies.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={poster_path ? BASE_IMG_URL + poster_path : DEFAULT_IMG_URL}\n                alt=\"movie\"\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </NavLink>\n          </Item>\n        ))}\n      </ListMovie>\n    </Section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import ScrollToTop from 'react-scroll-to-top';\nimport { BiChevronUp } from 'react-icons/bi';\n\nexport const ScrollButton = () => {\n  return (\n    <div>\n      <ScrollToTop\n        smooth\n        top={1500}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#3f51b5',\n          color: 'white',\n          borderRadius: '100%',\n          width: '50px',\n          height: '50px',\n        }}\n        component={\n          <p>\n            <BiChevronUp size={50} />\n          </p>\n        }\n      />\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { fetchTrendingMovies } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { LoadMore } from 'components/LoadMore/LoadMore';\nimport { ScrollButton } from 'components/ScrollButton/ScrollButton';\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  padding: 20px;\n`;\nconst Spinner = styled.h1`\n  text-align: center;\n`;\n\nconst Load = styled.div`\n  text-align: center;\n`;\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalImages, setTotalImages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies(page);\n        setMovies(prevMovies =>\n          page === 1 ? data.results : [...prevMovies, ...data.results]\n        );\n        setTotalImages(data.total_results);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page]);\n\n  const loadNextPage = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  if (movies) {\n    return (\n      <div>\n        <Title>Trending movies today</Title>\n        {!!movies.length && <MoviesList movies={movies} />}\n\n        {isLoading ? (\n          <Spinner>\n            <Loader />\n          </Spinner>\n        ) : (\n          movies.length !== 0 &&\n          movies.length < totalImages && (\n            <Load>\n                <LoadMore onLoadMore={loadNextPage} />\n                <ScrollButton/>\n            </Load>\n          )\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb60805928e986df13f7a98c4acc6577';\n\nexport const fetchTrendingMovies = async (page) => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\n  return response.data;\n};\n\nexport const fetchSearchQuery = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const DEFAULT_IMG_URL =\n  'http://hi-news.pp.ua/uploads/posts/2016-11/scho-oznachaye-smayl-mavpochka-z-zakritimi-ochima-v-yakih-situacyah-yogo-vikoristovuvati_192.jpeg';\nexport const BACKGROUND_IMG =\n  'https://cdn.create.vista.com/api/media/medium/204518900/stock-photo-flat-lay-clapper-board-filmstrips?token=';\n"],"names":["ButtonLoad","styled","LoadMore","onLoadMore","type","onClick","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Section","ListMovie","Item","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","BASE_IMG_URL","DEFAULT_IMG_URL","alt","ScrollButton","smooth","top","style","display","alignItems","justifyContent","backgroundColor","color","borderRadius","component","size","Title","Spinner","Load","useState","setMovies","page","setPage","totalImages","setTotalImages","isLoading","setIsLoading","useEffect","fetchTrendingMovies","data","prevMovies","results","total_results","console","log","length","prevPage","axios","API_KEY","response","fetchSearchQuery","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}