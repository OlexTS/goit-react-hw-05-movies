{"version":3,"file":"static/js/186.67b96732.chunk.js","mappings":"+NAgDA,UA5CgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAWvB,OAVA,iBAAC,8GAEsBC,EAAAA,EAAAA,IAAkBL,EAAS,CAC5CM,OAAQH,EAAWG,SAHxB,OAESC,EAFT,OAKGR,EAAgBQ,GALnB,gDAOGC,QAAQC,IAAR,MAPH,wDAAD,GAUO,kBACLN,EAAWO,OADN,CAGR,GAAE,CAACV,IAEwB,IAAxBF,EAAaa,QAEb,0BACE,8DAMJ,2BACE,oCACCb,EAAac,KAAI,SAAAC,GAAM,OACtB,yBACE,qCACWA,EAAOC,QAChB,yCAAiBD,EAAOE,eAHnBF,EAAOG,GADM,MAU7B,C,mMC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,uFACRJ,EAAAA,EAAAA,IAAA,qCAAwCC,GAAWG,GAD3C,cACzBC,EADyB,yBAGxBA,EAASf,KAAKgB,SAHU,2CAAH,wDAMnBC,EAAgB,mCAAG,WAAOC,EAAOJ,GAAd,uFACLJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEO,EAAlE,+BAAsGJ,GADjG,cACtBC,EADsB,yBAGrBA,EAASf,KAAKgB,SAHO,2CAAH,wDAMhBG,EAAiB,mCAAG,WAAOV,EAAIK,GAAX,uFACNJ,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,oBAAiCE,EAAjC,mBAA2DG,GADrD,cACvBC,EADuB,yBAGtBA,EAASf,MAHa,2CAAH,wDAMjBoB,EAAiB,mCAAG,WAAOX,EAAIK,GAAX,uFACNJ,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,4BAAyCE,EAAzC,mBAAmEG,GAD7D,cACvBC,EADuB,yBAGtBA,EAASf,KAAKqB,MAHQ,2CAAH,wDAMjBvB,EAAiB,mCAAG,WAAOW,EAAIK,GAAX,uFACNJ,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,4BAAyCE,EAAzC,0BAA0EG,GADpE,cACvBC,EADuB,yBAGtBA,EAASf,KAAKgB,SAHQ,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    (async () => {\n      try {\n        const data = await fetchMovieReviews(movieId, {\n          signal: controller.signal,\n        });\n        setReviewsMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => \n      controller.abort();\n    \n  }, [movieId]);\n\n  if (reviewsMovie.length === 0) {\n    return (\n      <div>\n        <p>This movie doesn't have reviews</p>\n      </div>\n    );\n  }\n\n  return (\n    <ul>\n      <h1>Rewiews</h1>\n      {reviewsMovie.map(review => (\n        <li key={review.id}>\n          <h2>\n            Author: {review.author}\n            <p>Description: {review.content}</p>\n          </h2>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb60805928e986df13f7a98c4acc6577';\n\nexport const fetchTrendingMovies = async (page, options) => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n\n    return response.data.results;\n}\n\nexport const fetchSearchQuery = async (query, options) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`, options);\n\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (id, options) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`, options);\n\n    return response.data;\n}\n\nexport const fetchMovieCredits = async (id, options) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`, options);\n\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (id, options) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`, options);\n\n    return response.data.results;\n}"],"names":["useState","reviewsMovie","setReviewsMovie","movieId","useParams","useEffect","controller","AbortController","fetchMovieReviews","signal","data","console","log","abort","length","map","review","author","content","id","axios","API_KEY","fetchTrendingMovies","page","options","response","results","fetchSearchQuery","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}